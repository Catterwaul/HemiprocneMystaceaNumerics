{"includedArchiveIdentifiers":["HMNumerics"],"interfaceLanguages":{"swift":[{"children":[{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/swift\/numeric\/squared","title":"var squared: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/swift\/numeric\/tothe(_:)","title":"func toThe<Power>(Power) -> Self","type":"method"}],"path":"\/documentation\/hmnumerics\/swift\/numeric","title":"Numeric","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/swift\/floatingpoint\/isinteger","title":"var isInteger: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/swift\/floatingpoint\/rounded(tonearestmultipleof:roundingrule:)","title":"func rounded(toNearestMultipleOf: Self, roundingRule: FloatingPointRoundingRule) -> Self","type":"method"}],"path":"\/documentation\/hmnumerics\/swift\/floatingpoint","title":"FloatingPoint","type":"extension"},{"path":"\/documentation\/hmnumerics\/swift\/additivearithmetic\/fibonaccisequence(_:)","title":"static func fibonacciSequence((Self, Self)) -> some Sequence<Self>\n","type":"method"},{"title":"Integers","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/swift\/fixedwidthinteger\/random","title":"static var random: Self","type":"property"}],"path":"\/documentation\/hmnumerics\/swift\/fixedwidthinteger","title":"FixedWidthInteger","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/swift\/unsignedinteger\/digits(radix:)","title":"func digits(radix: Self) -> [Self]","type":"method"}],"path":"\/documentation\/hmnumerics\/swift\/unsignedinteger","title":"UnsignedInteger","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/swift\/sequence\/joined(radix:)-2werz","title":"func joined<Integer>(radix: Int) throws -> Integer","type":"method"},{"path":"\/documentation\/hmnumerics\/swift\/sequence\/joined(radix:)-4p3u3","title":"func joined(radix: Int) throws -> Int","type":"method"}],"path":"\/documentation\/hmnumerics\/swift\/sequence","title":"Sequence","type":"extension"},{"title":"รท","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/swift\/binaryinteger\/_(_:_:)","title":"static func รท (Self, Self) throws(DivisionByZeroError<Self>) -> Self","type":"op"},{"path":"\/documentation\/hmnumerics\/realmodule\/algebraicfield\/_(_:_:)","title":"static func รท (Self, Self) throws(DivisionByZeroError<Self>) -> Self","type":"op"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/divisionbyzeroerror\/numerator","title":"let numerator: Numerator","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hmnumerics\/divisionbyzeroerror\/throw()","title":"func `throw`<Never>() throws -> Never","type":"method"}],"path":"\/documentation\/hmnumerics\/divisionbyzeroerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hmnumerics\/divisionbyzeroerror","title":"DivisionByZeroError","type":"struct"}],"path":"\/documentation\/hmnumerics","title":"HMNumerics","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}